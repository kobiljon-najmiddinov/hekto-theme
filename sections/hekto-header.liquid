<style>
    .navigation {
        color: var(--color-primary-text);
        flex-wrap: wrap;
        align-items: center;
        margin: auto;
        width: 100%;
    }
    .navigation_menu-drawer {
        display: none;
    }
    .header-left-items {
        display: flex;
        align-items: center;
        /* width: 50%; */
        gap: 10rem;
    }
    .logo-home-link {
        margin-right: auto;
    }

    .dropdown-child,
    .dropdown-grandchild {
        display: grid;
        grid-template-rows: 0fr;
        min-height: 0;
        border: 1px solid var(--color-tertiary-text);
        overflow: hidden;
        list-style-type: none;
    }
    .select-pages {
        color: var(--color-primary-text);
        font-size: 16px;
        font-weight: 400;
        line-height: 20px;
        cursor: pointer;
    }

    .select-pages:hover,
    .select-pages:focus {
        color: var(--color-primary-accent);
    }
    .nav-lists a {
        font-weight: 400;
        color: var(--color-primary-text);
        text-decoration: none;
    }

    .search-field {
        margin-left: auto;
    }
    .header-right-items {
        margin-left: auto;
        --gap: 3rem;
    }

    .header-right-items > a {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 5px;
    }
    .header-right-items a > svg {
        color: var(--color-primary-text);
        fill: var(--color-primary-text);
    }

    .header-right-items a svg path {
        fill: var(--color-primary-text);
    }

    .favicon-nav {
        align-items: center;
        gap: 70px;
    }

    .nav-lists {
        list-style-type: none;
        flex-direction: row;
        gap: 25px;
        padding-inline-start: 0;
    }

    .search-btn {
        background-color: var(--color-primary-accent);
        height: 40px;
        width: 51px;
        gap: 0;
        justify-content: center;
        align-items: center;
        border: 0;
        cursor: pointer;
    }

    @media screen and (max-width: 990px) {
        .overflow--hidden {
            overflow: hidden;
        }
        .navigation {
            display: grid;
            grid-template-columns: 1fr 2fr 1fr;
            grid-template-areas: 'left-side-icons logo right-side-icons';
            align-items: center;
        }
        .page--width {
            --page-width-padding: 1rem 3.2rem;
        }
        .favicon-nav {
            gap: 45px;
        }
        .logo-home-link {
            margin: auto;
        }

        .nav-lists {
            flex-wrap: wrap;
            justify-content: center;
        }
        .nav-inline-menu {
            display: none;
        }
        .navigation_menu-drawer {
            display: block;
        }
        .header_icons {
            cursor: pointer;
        }
        .header_icons svg,
        .header_icons path {
            fill: var(--color-primary-text);
        }

        .menu-drawer--icons {
            width: 20px;
            height: 20px;
        }

        .icon--close {
            display: none;
        }

        .menu-drawer--content {
            position: absolute;
            transform: translate(-100%);
            left: 0;
            z-index: 3;
            width: 40rem;
            height: 100%;
            margin-top: 10px;
            background: #fff;
            visibility: hidden;
            overflow-x: hidden;
            overflow-y: hidden;
            transition: transform 400ms ease-in-out;
        }
        .menu-drawer--icons[data-open='true'] .icon--close {
            display: block;
            transform: scale(0.8);
        }

        .menu-drawer--icons[aria-expanded='true']:before {
            content: '';
            margin-top: 40px;
            left: 0;
            height: 100%;
            width: 100%;
            display: block;
            position: absolute;
            z-index: 2;
            background: hsl(0 0% 0% / 0.5);
            /* transition: background 5s linear; */
        }

        .menu-drawer--content[data-open='true'] {
            transform: translate(0);
            visibility: visible;
        }
        .header_drawer-lists {
            height: 100%;
            flex-direction: column;
            list-style-type: none;
        }
        .header-right-items a span {
            display: none;
        }

        /* Header Right items */
        .header-right-items {
            --gap: 2rem;
        }
        .search-btn {
            height: 32px;
            width: 36px;
        }
    }
</style>

<div class='color-{{section.settings.color_scheme}}'>
    <div class='navigation ff-lato flex page--width '>
        <div class='navigation_menu-drawer '>
            <div class='menu-drawer--icons' aria-expanded='false'>
                <span class='header_icons'>
                    {% render 'icons', icon: 'hamburger' %}
                    {% render 'icons', icon: 'close' %}
                </span>
            </div>

            <div class='menu-drawer--content' data-open='false'>
                <ul class='header_drawer-lists flex '>
                    {% for link in section.settings.menu.links %}
                        <li>
                            <a href='{{ link.url }}'>{{ link.title }}</a>
                            {% if link.links.size > 0 %}
                                <ul class='menu dropdown-child'>
                                    {% for child_link in link.links %}
                                        <li class='menu-link'>
                                            <a href='{{ child_link.url }}'>{{ child_link.title }}</a>

                                            {% if child_link.links.size > 0 %}
                                                <ul class='menu dropdown-grandchild'>
                                                    {% for grandchild_link in child_link.links %}
                                                        <li class='menu-link'>
                                                            <a href='{{ grandchild_link.url }}'>
                                                                {{- grandchild_link.title -}}
                                                            </a>
                                                        </li>
                                                    {% endfor %}
                                                </ul>
                                            {% endif %}
                                        </li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
        {%- if section.settings.image != null -%}
            <a class='logo-home-link' href='/'>
                {{ section.settings.image | image_url: width: 100, height: 34 | image_tag }}
            </a>
        {%- endif -%}

        <nav class='nav-inline-menu'>
            <ul class='nav-lists flex '>
                {% for link in section.settings.menu.links %}
                    <li>
                        <a href='{{ link.url }}'>{{ link.title }}</a>
                        {% if link.links.size > 0 %}
                            <ul class='menu dropdown-child'>
                                {% for child_link in link.links %}
                                    <li class='menu-link'>
                                        <a href='{{ child_link.url }}'>{{ child_link.title }}</a>

                                        {% if child_link.links.size > 0 %}
                                            <ul class='menu dropdown-grandchild'>
                                                {% for grandchild_link in child_link.links %}
                                                    <li class='menu-link'>
                                                        <a href='{{ grandchild_link.url }}'>
                                                            {{- grandchild_link.title -}}
                                                        </a>
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        {% endif %}
                                    </li>
                                {% endfor %}
                            </ul>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </nav>
        <div class='header-right-items flex'>
            <form class='search-field flex' action='{{routes.search_url}}'>
                <button type='submit' class='search-btn flex'>
                    {% render 'icons', icon: 'search' %}
                </button>
            </form>
            <a href='#'>
                <span>Login </span>
                {% render 'icons', icon: 'user' %}
            </a>

            <a href='#'>
                <span>Wishlist </span>
                {% render 'icons', icon: 'favorite' %}
            </a>
            <a href='/cart'>
                {% render 'icons', icon: 'cart' %}
            </a>
        </div>
    </div>
</div>

<script>
    const menuDrawerBtn = document.querySelector('.header_icons')
    const menuDrawerData = document.querySelector('.menu-drawer--content')
    const body = document.querySelector('body')
    const drawerMenuIcons = document.querySelector('.menu-drawer--icons')
    const closeIcon = document.querySelector('.icon--close')
    const hamburgerIcon = document.querySelector('.icon--hamburger')

    menuDrawerBtn.addEventListener('click', function () {
        console.log(this)
        menuDrawerData.setAttribute('data-open', menuDrawerData.dataset.open == 'false' ? 'true' : 'false')
        let attribute = menuDrawerData.getAttribute('data-open')
        if (attribute == 'true') {
            body.classList.add('overflow--hidden')
            closeIcon.style.display = 'block'
            hamburgerIcon.style.display = 'none'
        } else {
            body.classList.remove('overflow--hidden')
            closeIcon.style.display = 'none'
            hamburgerIcon.style.display = 'block'
        }
        let drawerIconAttribute = drawerMenuIcons.getAttribute('aria-expanded')

        let ariaAttribute = drawerIconAttribute === 'false' ? 'true' : 'false'
        console.log(ariaAttribute)

        drawerMenuIcons.setAttribute('aria-expanded', ariaAttribute)
    })
</script>

{% schema %}
{
    "name": "Header Hekto",
    "class": "header-hekto",
    "enabled_on": {
        "groups": ["header"]
    },
    "settings": [
        {
            "type": "image_picker",
            "id": "image",
            "label": "Logo Image"
        },
        {
            "type": "link_list",
            "id": "menu",
            "label": "Menu"
        }
    ],
    "presets": [
        {
            "name": "Header Hekto",
            "settings": {}
        }
    ]
}
{% endschema %}
